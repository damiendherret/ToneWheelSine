/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
ToneWheelSineAudioProcessorEditor::ToneWheelSineAudioProcessorEditor (ToneWheelSineAudioProcessor& p)
    : AudioProcessorEditor (&p), processor (p)
{
    
    sliders.add(&subSlider);
    sliders.add(&slider5);
    sliders.add(&mainSlider);
    sliders.add(&slider8);
    sliders.add(&slider12);
    sliders.add(&slider15);
    sliders.add(&slider17);
    sliders.add(&slider19);
    sliders.add(&slider22);
    
	
    setSize (1000, 400);
    
    for (int i=0;i<sliders.size();++i)
    {
        Slider *s = sliders.getUnchecked(i);
        initSlider( *s,i);
        addAndMakeVisible(s);
    }
    

}

ToneWheelSineAudioProcessorEditor::~ToneWheelSineAudioProcessorEditor()
{
}

//==============================================================================
void ToneWheelSineAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);

    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("ToneWheelSine", 0, 0, getWidth(), 30, Justification::centred, 1);
}

void ToneWheelSineAudioProcessorEditor::resized()
{
    for (int i=0;i<sliders.size();++i)
    {
        Slider *s = sliders.getUnchecked(i);
        s->setBounds((10+(i*20)+2), 30, 20, 100);
    }
}

void ToneWheelSineAudioProcessorEditor::initSlider(Slider& slider, int position)
{
    slider.setSliderStyle (Slider::LinearBarVertical);
    slider.setRange(0.0, 1.0, 0.05);
    slider.setTextBoxStyle (Slider::NoTextBox, false, 90, 0);
    slider.setTextValueSuffix ("Bar");
    slider.setValue(0.0);
   
   
}
